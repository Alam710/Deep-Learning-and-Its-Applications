{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Object Oriented programming.ipynb","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMtBVysL+66wORNylyC8Exk"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"putZqVqyP_jv","executionInfo":{"status":"ok","timestamp":1610723047341,"user_tz":-420,"elapsed":2755,"user":{"displayName":"Islam Nur Alam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVLFgVTg2FG8qK1BF3f070b-1UIx9ONebSRZaZp3g=s64","userId":"05248831363937426236"}},"outputId":"8bd2c372-1e2b-449b-8717-f3af5df14a9e"},"source":["class Hero:\r\n","    pass\r\n","\r\n","\r\n","hero1 = Hero() # objek / instansilate\r\n","hero2 = Hero()\r\n","hero3 = Hero()\r\n","hero1.name=\"sniper\"\r\n","hero1.health = 100\r\n","\r\n","hero2.name = \"sven\"\r\n","hero2.health = 200\r\n","\r\n","hero3.name = \"alam\"\r\n","hero3.name = 1000\r\n","\r\n","print(hero1)\r\n","print(hero1.__dict__)\r\n","print(hero1.name)\r\n","\r\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<__main__.Hero object at 0x7fa7ff952550>\n","{'name': 'sniper', 'health': 100}\n","sniper\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"lZnjGiLEk-Ly"},"source":["class Hero:\r\n","\r\n","    def __init__(self,inputName, inputHealth, inputPower, inputArmor):\r\n","        self.name = inputName\r\n","        self.health = inputHealth\r\n","        self.power = inputPower\r\n","        self.armor = inputArmor\r\n","\r\n","\r\n","hero1 = Hero(\"Sniper\",100,10,4)\r\n","hero2 = Hero(\"Mirana\",100,15,1)\r\n","hero3 = Hero(\"Alam\",1000,100,0)\r\n","\r\n","print(hero1.__dict__)\r\n","print(hero2.__dict__)\r\n","print(hero3.__dict__)\r\n","\r\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"8DAc8aLUJu0A"},"source":["class Hero:\r\n","    # Class Variabel\r\n","    jumlah = 0\r\n","\r\n","\r\n","    def __init__(self,inputName, inputHealth, inputPower, inputArmor):\r\n","        # instance Valiable\r\n","        self.name = inputName\r\n","        self.health = inputHealth\r\n","        self.power = inputPower\r\n","        self.armor = inputArmor\r\n","        Hero.jumlah += 1\r\n","        print(\"Membuat Hero dengan nama : \"+ inputName)\r\n","\r\n","hero1 = Hero(\"Sniper\",100,10,4)\r\n","print(Hero.jumlah)\r\n","hero2 = Hero(\"Mirana\",100,15,1)\r\n","print(Hero.jumlah)\r\n","hero3 = Hero(\"Alam\",1000,100,0)\r\n","print(Hero.jumlah)\r\n","\r\n","\r\n","\r\n","\r\n","\r\n","\r\n","\r\n","\r\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"o9HgPqoMNoXu"},"source":["class Hero:\r\n","    # class variable\r\n","    jumlah_hero = 0\r\n","\r\n","    def __init__(self,inputName, inputHealth, inputPower, inputArmor):\r\n","        self.name = inputName\r\n","        self.health = inputHealth\r\n","        self.power = inputPower\r\n","        self.armor = inputArmor\r\n","        Hero.jumlah_hero += 1\r\n","    # void function, method tanpa return, tanpa argument\r\n","    def siapa(self):\r\n","        print(\"namaku adalah \"+ self.name)\r\n","\r\n","    # method dengan argument, tanpa return\r\n","    def healthUp(self,up):\r\n","        self.health += up\r\n","\r\n","    # Method dengan return\r\n","    def getHealth(self):\r\n","        return self.health\r\n","\r\n","hero1 = Hero('Sniper', 100, 10, 5)\r\n","hero2 = Hero('mario bros', 90, 5,10)\r\n","\r\n","hero1.siapa()\r\n","hero1.healthUp(10)\r\n","\r\n","print(hero1.getHealth())\r\n","\r\n","\r\n","\r\n","\r\n","\r\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"QiBP6kq_m5j_"},"source":["class Hero:\r\n","\r\n","    def __init__(self, name, health, attackPower, armorNumber):\r\n","        self.name = name\r\n","        self.health = health\r\n","        self.attackPower = attackPower\r\n","        self.armorNumber = armorNumber\r\n","\r\n","    def serang(self, lawan):\r\n","        print(self.name + ' menyerang '+ lawan.name)\r\n","        lawan.diserang(self, self.attackPower)\r\n","\r\n","    def diserang(self, lawan, attackPower_lawan):\r\n","        print(self.name + ' diserang ' + lawan.name)\r\n","        attack_diterima = attackPower_lawan/self.armorNumber\r\n","        print(' serangan terasa : '+str(attack_diterima))\r\n","        self.health -= attack_diterima\r\n","        print(' darah '+self.name+ ' tersisa '+ str(self.health))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Iz5CwFsenX9a"},"source":["import tkinter\r\n","\r\n","main_window = tkinter.Tk()\r\n","\r\n","\r\n","label1 = tkinter.Label(main_window, text = \"label1\")\r\n","label2 = tkinter.Label(main_window, text= \"label2\")\r\n","\r\n","tombol1 = tkinter.Button(main_window, text = \"label1\")\r\n","tombol2 = tkinter.Button(main_window, text = \"label2\")\r\n","\r\n","# method positioning\r\n","label1.pack()\r\n","label2.pack()\r\n","tombol1.pack()\r\n","tombol2.pack()\r\n","\r\n","# Method menampilkan GUI\r\n","main_window.mainloop()\r\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_djsTBelnWG8"},"source":["class Hero:\r\n","    # class variabel\r\n","    jumlah = 0\r\n","    __privateJumlah = 0\r\n","\r\n","    def __init__(self, name, health):\r\n","        self.name = name\r\n","        self.health = health\r\n","\r\n","        # variabel instance private\r\n","        self.__private = \"private\"\r\n","        #variabel instance protected\r\n","        self._protected = \"protected\"\r\n","\r\n","lina = Hero(\"lina\",100)\r\n","print(lina.__dict__)\r\n","print(Hero.__dict__)\r\n","# print(Hero.__privateJumlah)\r\n","\"\"\"\r\n","print(lina.__dict__)\r\n","print(lina._protected)\r\n","lina._protected = \"testing\"\r\n","print(lina.__dict__)\r\n","print(lina._protected)\r\n","\"\"\""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"w8qo0QUIlbcg"},"source":["class Hero:\r\n","\r\n","    def __init__(self, name, health, attachkPower):\r\n","        self.__name = name\r\n","        self.__health = health\r\n","        self.__attPower = attachkPower\r\n","\r\n","    # getter\r\n","    def getName(self):\r\n","        return self.__name\r\n","\r\n","    def getHealth(self):\r\n","        return self.__health\r\n","\r\n","    # setter\r\n","    def diserang(self, serangPower):\r\n","        self.__health -= serangPower\r\n","\r\n","    def setAttPower(self, nilaiBaru):\r\n","        self.__attPower = nilaiBaru\r\n","\r\n","# awal dari game\r\n","earthShaker = Hero(\"earthShaker\", 50, 5)\r\n","\r\n","# game berjalan\r\n","print(earthShaker.getName())\r\n","print(earthShaker.getHealth())\r\n","earthShaker.diserang(5)\r\n","print(earthShaker.getHealth())\r\n","\r\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"nzRGxHvKqKTt"},"source":["class Hero:\r\n","\r\n","    # private class variabel\r\n","    __jumlah = 0\r\n","\r\n","    def __init__(self, name):\r\n","        self.__name = name\r\n","        Hero.__jumlah += 1\r\n","    # method ini hanya berlaku untuk objek\r\n","    def getJumlah(self):\r\n","        return Hero.__jumlah\r\n","\r\n","    # method ini tidak berlaku untuk objek, tapi berlaku untuk kelas\r\n","    def getJumlah1():\r\n","        return Hero.__jumalah\r\n","\r\n","    # method static (decorator) nempel ke objek dan class nya\r\n","    @staticmethod\r\n","    def getJumlah2():\r\n","        return Hero.__jumlah\r\n","\r\n","    @classmethod\r\n","    def getJumlah3(cls):\r\n","        return cls.__jumlah\r\n","\r\n","\r\n","sniper = Hero('sniper')\r\n","print(Hero.getJumlah2())\r\n","rikimaru = Hero('rikimaru')\r\n","print(sniper.getJumlah2())\r\n","drowranger = Hero('drowranger')\r\n","print(sniper.getJumlah3())\r\n","\r\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gARurmdN3WxW","executionInfo":{"status":"ok","timestamp":1610983410547,"user_tz":-420,"elapsed":1762,"user":{"displayName":"Islam Nur Alam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVLFgVTg2FG8qK1BF3f070b-1UIx9ONebSRZaZp3g=s64","userId":"05248831363937426236"}},"outputId":"42617031-c54b-4675-b7b8-5c4a6d5778ba"},"source":["class Hero:\r\n","\r\n","    def __init__(self, name, health, armor):\r\n","        self.name = name\r\n","        self.__health = health\r\n","        self.__armor = armor\r\n","        # self.__info = \"name {} : \\n\\thealth: {}\".format(self.__name, self.__health)\r\n","\r\n","    @property\r\n","    def info(self):\r\n","        return \"name {} : \\n\\thealth: {}\".format(self.name, self.__health)\r\n","\r\n","    @property\r\n","    def armor(self):\r\n","        pass\r\n","\r\n","    @armor.getter\r\n","    def armor(self):\r\n","        return self.__armor\r\n","\r\n","    @armor.setter\r\n","    def armor(self, input):\r\n","        self.__armor = input\r\n","\r\n","    @armor.deleter\r\n","    def armor(self):\r\n","        print(\"armor di delet\")\r\n","        self.__armor = None\r\n","\r\n","\r\n","sniper = Hero('sniper',100, 10)\r\n","\r\n","print(\"merubah Info\")\r\n","print(sniper.info)\r\n","sniper.name = \"dadang\"\r\n","print(sniper.info)\r\n","\r\n","print('getter dan seter untuk __armor')\r\n","print(sniper.armor)\r\n","print(sniper.__dict__)\r\n","sniper.armor = 50\r\n","print(sniper.armor)\r\n","\r\n","print('delete armor ')\r\n","del sniper.armor\r\n","print(sniper.__dict__)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["merubah Info\n","name sniper : \n","\thealth: 100\n","name dadang : \n","\thealth: 100\n","getter dan seter untuk __armor\n","10\n","{'name': 'dadang', '_Hero__health': 100, '_Hero__armor': 10}\n","50\n","delete armor \n","armor di delet\n","{'name': 'dadang', '_Hero__health': 100, '_Hero__armor': None}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"LycsrfIzgghO"},"source":["class Hero:\r\n","\r\n","    # private class variabel\r\n","    __jumlah = 0\r\n","\r\n","    def __init__(self, name, health, attPower,armor):\r\n","        self.__name = name\r\n","        self.__healthStandart = health\r\n","        self.__attPowerStandar = attPower\r\n","        self.__armorStandart = armor\r\n","        self.__level = 1\r\n","        self.__exp = 0\r\n","        self.__healthMax = self.__healthStandart * self.__level\r\n","        self.__attPower = self.__attPowerStandar * self.__level\r\n","        self.__armor = self.__armorStandart * self.__level\r\n","\r\n","        self.__health = self.__healthMax\r\n","\r\n","        Hero.__jumlah += 1\r\n","\r\n","    @property\r\n","    def info(self):\r\n","        return \"{} level {}: \\n\\thealth = {}/{} \\n\\tattack = {} \\n\\tarmor = {}\".format(self.__name, self.__level, self.__health,self.__healthMax, self.__attPower, self.__armor)\r\n","\r\n","    @property\r\n","    def gainExp(self):\r\n","        pass\r\n","\r\n","    @gainExp.setter\r\n","    def gainExp(self, addExp):\r\n","        self.__exp += addExp\r\n","        if(self.__exp >= 100):\r\n","            print(self.__name, 'level up')\r\n","            self.__level += 1\r\n","            self.__exp -= 100\r\n","\r\n","            self.__healthMax = self.__healthStandart * self.__level\r\n","            self.__attPower = self.__attPowerStandar * self.__level\r\n","            self.__armor = self.__armorStandart * self.__level\r\n","\r\n","    def attack(self, musuh):\r\n","        self.gainExp = 50\r\n","\r\n","\r\n","\r\n","slardar = Hero('slardar', 100, 5, 10)\r\n","axe = Hero('axe', 100, 5, 10)\r\n","print(slardar.info)\r\n","\r\n","slardar.attack(axe)\r\n","slardar.attack(axe)\r\n","slardar.attack(axe)\r\n","# print(slardar.info)\r\n","\r\n","print(slardar.gainExp)\r\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"y48nfCWdKpXm"},"source":["class Hero:\r\n","    def __init__(self, name, health):\r\n","        self.name = name\r\n","        self.health = health\r\n","\r\n","class Hero_intelligent(Hero):\r\n","    pass\r\n","\r\n","class Hero_streng(Hero):\r\n","    pass\r\n","\r\n","lina = Hero('Lina', 100)\r\n","techies = Hero_intelligent('techies', 50)\r\n","axe = Hero_streng('axe', 200)\r\n","\r\n","print(lina.name)\r\n","print(techies.name)\r\n","#print(help(axe))\r\n","print(axe.name)\r\n","\r\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"7bXWwCDYPfpb"},"source":["class Hero:\r\n","    def __init__(self, name, health):\r\n","        self.name = name\r\n","        self.health = health\r\n","\r\n","    def showInfo(self):\r\n","        print(\"{} dengan health: {}\".format(self.name, self.health))\r\n","\r\n","class Hero_intelligent(Hero):\r\n","    def __init__(self, name):\r\n","       # self.name = name\r\n","       # Hero.__init__(self, name, 100)\r\n","        super().__init__(name, 100)\r\n","        super().showInfo()\r\n","        Hero.showInfo(self)\r\n","\r\n","class Hero_Strenght(Hero):\r\n","    def __init__(self, name):\r\n","      #  self.name = name\r\n","      # self.health = 200\r\n","      #  Hero.__init__(self, name, 200)\r\n","        super().__init__(name, 200)\r\n","        super().showInfo()\r\n","lina = Hero_intelligent('Lina')\r\n","axe = Hero_Strenght('axe')\r\n","\r\n","# print(lina.name , \" \", lina.health )\r\n","# print(axe.name, \" \", axe.health)\r\n","\r\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"TUN3ycazPjgJ"},"source":["class Hero:\r\n","    def __init__(self, name, health):\r\n","        self.name = name\r\n","        self.health = health\r\n","\r\n","    def showInfo(self):\r\n","        print(\"show info di class hero\")\r\n","        print(\"{} \\n\\tTipe: {} health: {}\".format(self.name,\r\n","                                                  self.health))\r\n","\r\n","class Hero_intelligent(Hero):\r\n","    def __init__(self, name):\r\n","        super().__init__(name, 100)\r\n","    # override\r\n","    def showInfo(self):\r\n","        print(\"show info di subclass Hero_Intelligent\")\r\n","        print(\"{} \\n\\tTipe: intelligent, \\n\\thealth:{}\".format(self.name, self.health))\r\n","\r\n","class Hero_streng(Hero):\r\n","    def __init__(self, name):\r\n","        super().__init__(name, 200)\r\n","\r\n","\r\n","lina = Hero_intelligent('lina')\r\n","axe = Hero_streng('axe')\r\n","\r\n","lina.showInfo()\r\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0s-z9RNCEAaB","executionInfo":{"status":"ok","timestamp":1611931245444,"user_tz":-420,"elapsed":908,"user":{"displayName":"Islam Nur Alam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhVLFgVTg2FG8qK1BF3f070b-1UIx9ONebSRZaZp3g=s64","userId":"05248831363937426236"}},"outputId":"dec15859-0641-4ee3-a14b-af97e41bbb90"},"source":["class Hero:\r\n","    def __init__(self, name):\r\n","        self.health_pool = [0,100,200,300,400,500]\r\n","        self.attPower_pool = [0,10,20,30,40,50]\r\n","        self.armor_pool = [0,1,2,3,4,5]\r\n","        self.__name = name\r\n","        self.__exp = 0\r\n","        self.__level = 0\r\n","\r\n","    def show_info(self):\r\n","        print(\"{} \\n\\tlevel: {}\\n\\thealth: {}\\n\\tattPower: {}\\n\\tarmor: {}\".\r\n","              format(self.__name,\r\n","                     self.__level,\r\n","                     self.__health,\r\n","                     self.__attPower,\r\n","                     self.__armor\r\n","                     )\r\n","              )\r\n","    @property\r\n","    def health_pool(self):\r\n","        pass\r\n","\r\n","    @property\r\n","    def attPower_pool(self):\r\n","        pass\r\n","\r\n","    @property\r\n","    def armor_pool(self):\r\n","        pass\r\n","    @property\r\n","    def levelUp(self):\r\n","        pass\r\n","\r\n","    @property\r\n","    def gainExp(self):\r\n","        pass\r\n","\r\n","    @health_pool.setter\r\n","    def health_pool(self, input):\r\n","        self.__health_pool = input\r\n","\r\n","    @attPower_pool.setter\r\n","    def attPower_pool(self, input):\r\n","        self.__attPower_pool = input\r\n","\r\n","    @armor_pool.setter\r\n","    def armor_pool(self, input):\r\n","        self.__armor_pool = input\r\n","\r\n","    @gainExp.setter\r\n","    def gainExp(self, input):\r\n","        self.__exp += input\r\n","        if(self.__exp >= 100):\r\n","            self.levelUp = self.__exp//100\r\n","            self.__exp %= 100\r\n","\r\n","    @levelUp.setter\r\n","    def levelUp(self, input):\r\n","        self.__level += input\r\n","        self.__health = self.__health_pool[self.__level]\r\n","        self.__attPower = self.__attPower_pool[self.__level]\r\n","        self.__armor = self.__armor_pool[self.__level]\r\n","\r\n","class HeroIntelligent(Hero):\r\n","\r\n","    def __init__(self, name):\r\n","        super().__init__(name)\r\n","        self.health_pool = [0,50,100,150,200,250]\r\n","        self.attPower_pool = [0,20,40,60,80,100]\r\n","        self.armor_pool = [0,0,5,1,1,5,2,2,2.5]\r\n","        self.levelUp = 1\r\n","\r\n","\r\n","class HeroStrenght(Hero):\r\n","\r\n","    def __init__(self, name):\r\n","        super().__init__(name)\r\n","        self.health_pool = [0, 200, 300, 400, 500, 600]\r\n","        self.attPower_pool = [0, 20, 40, 60, 80, 100]\r\n","        self.armor_pool = [0,2,4,6,8,10]\r\n","        self.levelUp = 1\r\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["lina \n","\tlevel: 1\n","\thealth: 50\n","\tattPower: 20\n","\tarmor: 0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"UD-qFgxEpVUp"},"source":["from hero import HeroIntelligent,HeroStrenght\r\n","\r\n","lina = HeroIntelligent('lina')\r\n","slardar = HeroStrenght('slardar')\r\n","\r\n","lina.show_info()\r\n","slardar.show_info()\r\n","\r\n","lina.gainExp = 200\r\n","slardar.gainExp = 250\r\n","\r\n","lina.show_info()\r\n","slardar.show_info()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_XMhEtDYltem"},"source":["class A:\r\n","\r\n","    def method_A(self):\r\n","        print(\"ini adalah method A \")\r\n","\r\n","class B :\r\n","    def method_B(self):\r\n","        print(\"ini adalah method B \")\r\n","\r\n","class C(A,B):\r\n","    pass\r\n","\r\n","objek = C()\r\n","\r\n","objek.method_A()\r\n","objek.method_B()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"E-OsDWA1rATr"},"source":["class Team:\r\n","    def setTeam(self, team):\r\n","        self.team = team\r\n","\r\n","    def showTeam(self):\r\n","        print(self.team)\r\n","\r\n","\r\n","class Tipe_Hero:\r\n","    def setTipe(self,tipe):\r\n","        self.tipe = tipe\r\n","\r\n","    def showTipe(self):\r\n","        print(self.tipe)\r\n","\r\n","class Hero(Team, Tipe_Hero):\r\n","    def __init__(self, name, health):\r\n","        self.name = name\r\n","        self.health = health\r\n","\r\n","Ucup = Hero('Ucup', 100)\r\n","Ucup.setTeam(\"merah\")\r\n","Ucup.setTipe(\"cundang\")\r\n","\r\n","Ucup.showTeam()\r\n","Ucup.showTipe()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"GIyWw5L5rMM1"},"source":["# method resolution order // multiple inheritance\r\n","\r\n","class A :\r\n","    def show(self):\r\n","        print(\"ini adalah show A\")\r\n","\r\n","class B :\r\n","    def show(self):\r\n","        print(\"ini adalah show B\")\r\n","\r\n","class C(B,A):\r\n","    pass\r\n","\r\n","objek = C()\r\n","objek.show()\r\n","#help(objek)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"77cN8ZbjrDOA"},"source":["# diamond problem\r\n","class A:\r\n","    def show(self):\r\n","        print(\"ini adalah show A\")\r\n","\r\n","class B(A):\r\n","    def show(self):\r\n","        print(\"ini adalah show B\")\r\n","class C(A):\r\n","    def show(self):\r\n","        print(\"ini adalah show C\")\r\n","\r\n","\r\n","class D(B,C):\r\n","    pass\r\n","\r\n","objek = D()\r\n","objek.show()\r\n","\r\n","help(objek)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"fsE54H3HgIec"},"source":["class Mangga:\r\n","    \r\n","    # Magic Method\r\n","    def __init__(self, nama, jumlah):\r\n","        self.nama = nama\r\n","        self.jumlah = jumlah\r\n","\r\n","    def __repr__(self):\r\n","        return \"Debug : Mangga: {} dengan jumlah: {}\".format(self.nama,self.jumlah)\r\n","\r\n","    def __str__(self):\r\n","        return \"Mangga: {} dengan jumlah: {}\".format(self.nama, self.jumlah)\r\n","\r\n","    def __add__(self, objek):\r\n","        return self.jumlah + objek.jumlah\r\n","\r\n","    @property\r\n","    def __dict__(self):\r\n","        return \"objek ini mempunyai nama dan jumlah\"\r\n","\r\n","\r\n","belanja1 = Mangga('arumanis', 10)\r\n","belanja2 = Mangga('Mana lagi', 30)\r\n","print(belanja1)\r\n","print(belanja2)\r\n","print(belanja1 + belanja2)\r\n","print(belanja1.__dict__)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"tvxOrWWzIP3R"},"source":["# membuat class abstract\r\n","# abc = abstract base class\r\n","\r\n","from abc import ABC, abstractmethod\r\n","\r\n","class Button(ABC):\r\n","\r\n","    @abstractmethod\r\n","    def click(self):\r\n","        pass\r\n","\r\n","class PushButton(Button):\r\n","    def click(self):\r\n","        print(\"push button click\")\r\n","\r\n","class RadioButton(Button):\r\n","\r\n","    def click(self):\r\n","        print(\"radio button click\")\r\n","\r\n","tombol1 = PushButton()\r\n","tombol2 = RadioButton()\r\n","\r\n","tombol1.click()\r\n","tombol2.click()\r\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"0UH-_IyUdhPy"},"source":["from abc import ABC, abstractmethod\r\n","\r\n","class Button(ABC):\r\n","\r\n","    def __init__(self, set_link):\r\n","        self.link = set_link\r\n","\r\n","    @abstractmethod\r\n","    def click(self):\r\n","        pass\r\n","\r\n","    @property\r\n","    @abstractmethod\r\n","    def link(self):\r\n","        pass\r\n","\r\n","class PushButton(Button):\r\n","\r\n","    def click(self):\r\n","        print(\"Go To: {}\".format(self.link))\r\n","\r\n","    @Button.link.setter\r\n","    def link(self, input):\r\n","        self.__link = input\r\n","\r\n","    @link.getter\r\n","    def link(self):\r\n","        return self.__link\r\n","\r\n","\r\n","tombol1 = PushButton(\"www.alam.id\")\r\n","tombol1.click()"],"execution_count":null,"outputs":[]}]}